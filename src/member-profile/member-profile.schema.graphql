
type MemberProfileMetaData {
    id: Int!
    memberId:Int!
    member: Member
    staffId:String
    age:Int
    height:Int
    trs:Int
    bmi:Int
    createdAt: DateTime
    updatedAt: DateTime
}

type MemberProfileInsuranceInfo {
    id:Int!
    memberId: Int!
    issuedPlanId:Int
    issuedPlan: [IssuedPlan!]!

}


type MemberProfileMedicalInfo {
    id: Int!,
    memberId:Int!,
    chronicDiseases: [Disease],
    chronicMedicines:[Medicines]
}

type Disease {
    id:Int!
    name:String!
    DiagnosisDate:DateTime
}

type Medicines {
    id:Int!
    name:String!
    DateOfUse:DateTime
    imageOfMedicine: String
    price: Int!

}


input ActiveIssuedPlanInput {
    startDate: DateTime
    endDate: DateTime
}

input SortIssuedPlanInput{
    endDate: DateTime!
    order: SortOrder = DESC
}
enum SortOrder{
    DESC
    ASC
}


type Query {
    listMemberProfileMetaData: [MemberProfileMetaData]!
    listMemberProfileMetaDatainfo(memberProfileId: Int!): MemberProfileMetaData!
    listMemberChronicDiseaseByMemberId(memberId:Int!) : [Disease]
    listMemberChronicMedicinesByMemberId(memberId:Int!) : [Medicines]
    listMemberProfileMedicalInfoByMemberId(memberId:Int!): MemberProfileMedicalInfo!
    listMemberActiveIssuedPlane(memberProfileId: Int!, filter: ActiveIssuedPlanInput, sort: SortIssuedPlanInput ): [MemberProfileInsuranceInfo!]!
    istMemberActiveIssuedPlaneDetails(memberProfileId: Int!, issuedPlanId:Int!): MemberProfileInsuranceInfo!
}

