
type BeyondManager {
    id: Int!
    first_name: String!
    last_name: String!
    email: String!
    invitation_status: String!
    company_id: Int!
    invited_by_id: Int!
    invitation_date: DateTime
    activation_date: DateTime
    deactivation_date: DateTime
    deactivated_by: Int
    deleted_date: DateTime
    deleted_by_id: Int
    password: String!
    temporary_password: String!
    created_at: String!
    updated_at: String
  }

scalar DateTime
scalar Void


  type Query {
    beyondManagerLogin(email: String, password:String): BeyondManager!
    beyondManagers(limit: Int, offset:Int): [BeyondManager!]!
    beyondManager(id: Int!): BeyondManager
    beyondManagerChangePassword(old_password: String, new_password:String, confirm_password: String, isFirstReset:Boolean): Void
    beyondManagerRequestForgetPassword(email: String): Void
    beyondManagerVerifyForgetPassword(email: String, temporary_password: String, new_password: String, confirm_password: String): Void

  }
